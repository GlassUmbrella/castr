<% if(!locals.activePodcastTab) { activePodcastTab = "none"; } %>

<div class="row" style="margin-bottom:1em;">
	<ul class="nav nav-pills pull-right">
		<li>
			<a href="<%= "/podcasts/{0}/episodes/create".format(podcast.id) %>">
				<i class="fui-plus"></i>
				New episode
			</a>
		</li>
		<li>
			<a href="<%= "{0}{1}.{2}".format(global.protocol, locals.podcast.url, global.baseUrl) %>">
				<span class="fui-upload"></span>
				View
			</a>
		</li>
	</ul>

	<div class="span8" id="podcastDetails">
		<h3 data-bind="visible: !podcastNameEditing(), text: podcastName, click: editPodcastName"><%= podcast.title %></h3>
    	<input data-bind="visible: podcastNameEditing, value: podcastName, hasFocus: podcastNameEditing" class="h3-style span10" value="<%= podcast.title %>" />

    	<span data-bind="visible: !podcastDescriptionEditing(), text: podcastDescription, click: editPodcastDescription"><%= podcast.description %></span>
		<input data-bind="visible: podcastDescriptionEditing, value: podcastDescription, hasFocus: podcastDescriptionEditing" class="span-style span10" value="<%= podcast.description %>" />
	</div>
</div>

<div class="row">
	<div class="span12">
		<ul class="nav nav-tabs" <% if(activePodcastTab == "episodes") { %> style="margin-bottom: 0px;" <% } %>>
			<li <% if(activePodcastTab == "episodes") { %> class="active" <% } %>>
			    <a href="episodes">
			    	<span class="fui-mic"></span>
			    	Episodes
			    </a>
			</li>
			<li <% if(activePodcastTab == "stats") { %> class="active" <% } %>>
			    <a href="stats">
			    	<span class="fui-document"></span>
			    	Stats
			    </a>
			</li>
		</ul>
	</div>
</div>

<script>
	function PodcastDetailsViewModel(podcastName, podcastDescription) {
		var self = this;

	    this.podcastName = ko.observable(podcastName);
	    this.podcastDescription = ko.observable(podcastDescription);

	    this.podcastNameEditing = ko.observable(false);
	    this.podcastDescriptionEditing = ko.observable(false);
	         
		this.editPodcastName = function() {
			this.podcastNameEditing(true)
		};

		this.editPodcastDescription = function() {
			this.podcastDescriptionEditing(true)
		};

		this.podcastNameEditing.subscribe(function(isEditing) {
			if(!isEditing) {
				$.ajax({ type: "POST", url: "/api/podcasts/<%= podcast.id %>/changeTitle/{0}".format(self.podcastName())});
			}
		});

		this.podcastDescriptionEditing.subscribe(function(isEditing) {
			if(!isEditing) {
				$.ajax({ type: "POST", url: "/api/podcasts/<%= podcast.id %>/changeDescription/{0}".format(self.podcastDescription())});
			}
		});
	}
	 
	ko.applyBindings(new PodcastDetailsViewModel("<%= podcast.title %>", "<%= podcast.description %>"), document.getElementById("podcastDetails"));
</script>